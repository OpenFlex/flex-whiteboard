<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:st="library://ns.tink.ws/flex/spark"
					   xmlns:local="*" viewSourceURL="srcview/index.html"
					   >
	
	<fx:Library>
		<fx:Definition name="Divider">
			<s:Graphic width="15" height="18">
				<s:Rect width="15" height="18">
					<s:fill>
						<s:SolidColor alpha="0"/>
					</s:fill>
				</s:Rect>
				<s:Line height="18" horizontalCenter="0">
					<s:stroke>
						<s:SolidColorStroke weight="2" color="0x000000" caps="none"/>
					</s:stroke>
				</s:Line>
			</s:Graphic> 
		</fx:Definition>
	</fx:Library>
	
	<fx:Script>
		<![CDATA[
			import spark.effects.easing.Bounce;
			import spark.effects.easing.Elastic;
			import spark.effects.easing.Linear;
			import spark.effects.easing.Power;
			import spark.effects.easing.Sine;
			import spark.events.IndexChangeEvent;
			
			//            private function createPreset( event:MouseEvent ):void
			//            {
			//                // TODO Auto-generated method stub
			//                trace( '<fx:Object label="test" angle="'+angle.value+'" numUnselectedElements="'+numUnselectedElements.value+
			//                '" rotateX="'+rotateX.selectedIndex+'" rotateY="'+rotateY.selectedIndex+
			//                '" depthColor="'+depthColor.selectedColor+'" depthColorAlpha="'+depthColorAlpha.value+
			//                '" radiusX="'+radiusX.value+'" radiusY="'+radiusY.value+'" radiusZ="'+radiusZ.value+
			//                '" horizontalAlign="'+horizontalAlign.selectedIndex+'" verticalAlign="'+verticalAlign.selectedIndex+
			//                '" horizontalAlignOffset="'+horizontalAlignOffset.value+'" verticalAlignOffset="'+verticalAlignOffset.value+
			//                '" elementHorizontalAlign="'+elementHorizontalAlign.selectedIndex+'" elementVerticalAlign="'+elementVerticalAlign.selectedIndex+
			//                '" projectionCenterX="'+projectionCenterX.value+'" projectionCenterY="'+projectionCenterY.value+
			//                '" fieldOfView="'+fieldOfView.value+
			//                '" easer="'+easer.selectedIndex+'" duration="'+duration.value+
			//                '" useScrollBarForNavigation="'+useScrollBarForNavigation.selected+'" scrollBarDirection="'+scrollBarDirection.selectedIndex + '"/>');
			//            }
			
			private function onPresetsChange( event:IndexChangeEvent ):void
			{
				var item:Object = presets.selectedItem;
				var control:Object;
				for( var prop:String in item )
				{
					if( prop != "label" )
					{
						control = this[ prop ];
						if( control is CheckBox )
						{
							CheckBox( control ).selected = item[ prop ] as Boolean;
						}
						else if( control is ButtonBar )
						{
							ButtonBar( control ).selectedIndex = item[ prop ] as uint;
						}
//						else if( control is ColorPicker )
//						{
//							ColorPicker( control ).selectedColor = item[ prop ] as uint;
//						}
						else if( control is NumericStepper )
						{
							NumericStepper( control ).value = item[ prop ] as Number;
						}
						else
						{
							throw new Error( "noooo" );
						}
					}
				}
			}
			
		]]>
	</fx:Script>
	
	
	<s:Scroller width="100%" height="100%">
		<s:VGroup horizontalAlign="center">
			
			<s:Label text="Navigator" fontWeight="bold" fontSize="16" height="30" verticalAlign="bottom"/>
			
			<st:Navigator id="navigator" width="400" height="300">
				
				<st:layout>
					<st:CarouselLayout angle="{angle.value}" numUnselectedElements="{numUnselectedElements.value}"
									   rotateX="{rotateX.selectedItem.label}" rotateY="{rotateY.selectedItem.label}" 
									   depthColor="{depthColor.selectedItem.value}" depthColorAlpha="{depthColorAlpha.value}"
									   radiusX="{radiusX.value}" radiusY="{radiusY.value}" radiusZ="{radiusZ.value}"
									   horizontalAlign="{horizontalAlign.selectedItem.label}" verticalAlign="{verticalAlign.selectedItem.label}"
									   horizontalAlignOffset="{horizontalAlignOffset.value}" verticalAlignOffset="{verticalAlignOffset.value}"
									   elementHorizontalAlign="{elementHorizontalAlign.selectedItem.label}" elementVerticalAlign="{elementVerticalAlign.selectedItem.label}"
									   projectionCenterX="{projectionCenterX.value}" projectionCenterY="{projectionCenterY.value}"
									   fieldOfView="{fieldOfView.value}"
									   easer="{easer.selectedItem.ease}" duration="{duration.value}"
									   useScrollBarForNavigation="{useScrollBarForNavigation.selected}" scrollBarDirection="{scrollBarDirection.selectedItem}"/>
				</st:layout>
				
				<s:BorderContainer width="20%" height="20%" backgroundColor="0xff0000">
					<s:Label text="0" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0xffa500">
					<s:Label text="1" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0xffff00">
					<s:Label text="2" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0x008000">
					<s:Label text="3" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0x0000ff">
					<s:Label text="4" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0x4b0082">
					<s:Label text="5" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0xee82ee">
					<s:Label text="6" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0xff0000">
					<s:Label text="7" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0xffa500">
					<s:Label text="8" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0xffff00">
					<s:Label text="9" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0x008000">
					<s:Label text="10" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0x0000ff">
					<s:Label text="11" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0x4b0082">
					<s:Label text="12" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				<s:BorderContainer width="20%" height="20%" backgroundColor="0xee82ee">
					<s:Label text="13" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
				</s:BorderContainer>
				
			</st:Navigator>
			
			<s:ButtonBar width="400" dataProvider="{navigator}" labelField="label" fontSize="8"/>
			
			<s:Label text="DataNavigator" fontWeight="bold" fontSize="16" height="30" verticalAlign="bottom"/>
			
			<st:DataNavigator id="dataNavigator" width="400" height="300">
				
				<st:layout>
					<st:CarouselLayout useScrollBarForNavigation="{useScrollBarForNavigation.selected}" scrollBarDirection="{scrollBarDirection.selectedItem}"
									   angle="{angle.value}" numUnselectedElements="{numUnselectedElements.value}"
									   rotateX="{rotateX.selectedItem.label}" rotateY="{rotateY.selectedItem.label}" 
									   easer="{easer.selectedItem.ease}" duration="{duration.value}"
									   depthColor="{depthColor.selectedItem.value}" depthColorAlpha="{depthColorAlpha.value}"
									   radiusX="{radiusX.value}" radiusY="{radiusY.value}" radiusZ="{radiusZ.value}"
									   horizontalAlign="{horizontalAlign.selectedItem.label}" verticalAlign="{verticalAlign.selectedItem.label}"
									   horizontalAlignOffset="{horizontalAlignOffset.value}" verticalAlignOffset="{verticalAlignOffset.value}"
									   elementHorizontalAlign="{elementHorizontalAlign.selectedItem.label}" elementVerticalAlign="{elementVerticalAlign.selectedItem.label}"
									   projectionCenterX="{projectionCenterX.value}" projectionCenterY="{projectionCenterY.value}"
									   fieldOfView="{fieldOfView.value}"/>
				</st:layout>
				
				<st:dataProvider>
					<s:ArrayList>
						<fx:Object label="0" color="0xff0000"/>
						<fx:Object label="1" color="0xffa500"/>
						<fx:Object label="2" color="0xffff00"/>
						<fx:Object label="3" color="0x008000"/>
						<fx:Object label="4" color="0x0000ff"/>
						<fx:Object label="5" color="0x4b0082"/>
						<fx:Object label="6" color="0xee82ee"/>
						<fx:Object label="7" color="0xff0000"/>
						<fx:Object label="8" color="0xffa500"/>
						<fx:Object label="9" color="0xffff00"/>
						<fx:Object label="10" color="0x008000"/>
						<fx:Object label="11" color="0x0000ff"/>
						<fx:Object label="12" color="0x4b0082"/>
						<fx:Object label="13" color="0xee82ee"/>
					</s:ArrayList>
				</st:dataProvider>
				
				<st:itemRenderer>
					<fx:Component>
						<s:ItemRenderer width="20%" height="20%">
							
							<fx:Script>
								<![CDATA[
									
									[Bindable]
									private var _color:uint;
									
									override public function set data( value:Object ):void
									{
										super.data = value;
										if( data ) _color = data.color
									}
									
								]]>
							</fx:Script>
							
							<s:Rect width="100%" height="100%">
								<s:fill>
									<s:SolidColor color="{_color}"/>
								</s:fill>
							</s:Rect>
							
							<s:Label text="{itemIndex}" color="0xffffff" horizontalCenter="0" verticalCenter="0"/>
							
						</s:ItemRenderer>
					</fx:Component>
				</st:itemRenderer>
				
			</st:DataNavigator>
			
			<s:ButtonBar width="400" dataProvider="{dataNavigator}" labelField="label" fontSize="8"/>
			
			<s:Label text="CarouselLayout Properties" fontWeight="bold" fontSize="13" height="30" verticalAlign="bottom"/>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" gap="0">
				
				<s:Label text="numUnselectedElements:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="numUnselectedElements" minimum="0" maximum="20" value="0" fontSize="8"/>
				
				<fx:Divider/>
				
				<s:Label text="angle:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="angle" minimum="0" maximum="360" value="360" fontSize="8"/>
				
			</s:HGroup>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" gap="0">
				
				<s:Label text="radiusX:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="radiusX" minimum="-400" maximum="400" value="200" fontSize="8"/>
				
				<fx:Divider/>
				
				<s:Label text="radiusY:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="radiusY" minimum="-400" maximum="400" value="0" fontSize="8"/>
				
				<fx:Divider/>
				
				<s:Label text="radiusZ:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="radiusZ" minimum="-400" maximum="400" value="200" fontSize="8"/>
				
			</s:HGroup>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" gap="0">
				
				<s:Label text="depthColor:" fontWeight="bold" fontSize="8"/>
				<s:ButtonBar id="depthColor" fontSize="8">
					<s:dataProvider>
						<s:ArrayList>
							<fx:Object label="white" value="0xffffff"/>
							<fx:Object label="black" value="0x000000"/>
							<fx:Object label="red" value="0xff0000"/>
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
				
				<fx:Divider/>
				
				<s:Label text="depthColorAlpha:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="depthColorAlpha" minimum="0" maximum="100" value="0" fontSize="8"/>
				
			</s:HGroup>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" gap="0">
				
				<s:Label text="rotateX:" fontWeight="bold" fontSize="8"/>
				<s:ButtonBar id="rotateX" fontSize="8">
					<s:dataProvider>
						<s:ArrayList>
							<fx:Object label="none"/>
							<fx:Object label="standard"/>
							<fx:Object label="reversed"/>
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
				
				<fx:Divider/>
				
				<s:Label text="rotateY:" fontWeight="bold" fontSize="8"/>
				<s:ButtonBar id="rotateY" fontSize="8">
					<s:dataProvider>
						<s:ArrayList>
							<fx:Object label="none"/>
							<fx:Object label="standard"/>
							<fx:Object label="reversed"/>
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
				
			</s:HGroup>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" gap="0">
				
				<s:Label text="horizontalAlign:" fontWeight="bold" fontSize="8"/>
				<s:ButtonBar id="horizontalAlign" selectedIndex="1" fontSize="8">
					<s:dataProvider>
						<s:ArrayList>
							<fx:Object label="left"/>
							<fx:Object label="center"/>
							<fx:Object label="right"/>
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
				
				<fx:Divider/>
				
				<s:Label text="verticalAlign:" fontWeight="bold" fontSize="8"/>
				<s:ButtonBar id="verticalAlign" selectedIndex="1" fontSize="8">
					<s:dataProvider>
						<s:ArrayList>
							<fx:Object label="bottom"/>
							<fx:Object label="middle"/>
							<fx:Object label="top"/>
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
				
			</s:HGroup>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" gap="0">
				
				<s:Label text="horizontalAlignOffset:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="horizontalAlignOffset" minimum="-300" maximum="300" value="0" fontSize="8"/>
				
				<fx:Divider/>
				
				<s:Label text="verticalAlignOffset:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="verticalAlignOffset" minimum="-300" maximum="300" value="0" fontSize="8"/>
				
			</s:HGroup>
			
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" gap="0">
				
				<s:Label text="elementHorizontalAlign:" fontWeight="bold" fontSize="8"/>
				<s:ButtonBar id="elementHorizontalAlign" selectedIndex="1" fontSize="8">
					<s:dataProvider>
						<s:ArrayList>
							<fx:Object label="left"/>
							<fx:Object label="center"/>
							<fx:Object label="right"/>
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
				
				<fx:Divider/>
				
				<s:Label text="elementVerticalAlign:" fontWeight="bold" fontSize="8"/>
				<s:ButtonBar id="elementVerticalAlign" selectedIndex="1" fontSize="8">
					<s:dataProvider>
						<s:ArrayList>
							<fx:Object label="bottom"/>
							<fx:Object label="middle"/>
							<fx:Object label="top"/>
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
				
			</s:HGroup>
			
			<s:Label text="PerspectiveAnimationNavigatorLayoutBase Properties" fontWeight="bold" fontSize="13" height="30" verticalAlign="bottom"/>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" gap="0">
				
				<s:Label text="projectionCenterX:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="projectionCenterX" minimum="0" maximum="400" value="200" fontSize="8"/>
				
				<fx:Divider/>
				
				<s:Label text="projectionCenterY:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="projectionCenterY" minimum="0" maximum="300" value="150" fontSize="8"/>
				
				<fx:Divider/>
				
				<s:Label text="fieldOfView:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="fieldOfView" minimum="1" maximum="179" value="55" fontSize="8"/>
				
			</s:HGroup>
			
			<s:Label text="AnimationNavigatorLayoutBase Properties" fontWeight="bold" fontSize="13" height="30" verticalAlign="bottom"/>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" gap="0">
				
				<s:Label text="easer:"  fontWeight="bold" fontSize="8"/>
				<s:ButtonBar id="easer" fontSize="8" requireSelection="true">
					<s:dataProvider>
						<s:ArrayList>
							<fx:Object label="Linear" ease="{new Linear( 0, 1 )}"/>
							<fx:Object label="Bounce" ease="{new Bounce()}"/>
							<fx:Object label="Sine" ease="{new Sine()}"/>
							<fx:Object label="Power" ease="{new Power()}"/>
							<fx:Object label="Elastic" ease="{new Elastic()}"/>
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
				
				<fx:Divider/>
				
				<s:Label text="duration:" fontWeight="bold" fontSize="8"/>
				<s:NumericStepper id="duration" minimum="200" value="700" maximum="3000" fontSize="8"/>
				
			</s:HGroup>
			
			<s:Label text="NavigatorLayoutBase Properties" fontWeight="bold" fontSize="13" height="30" verticalAlign="bottom"/>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" gap="0">
				
				<s:CheckBox label="useScrollBarForNavigation:" fontWeight="bold" id="useScrollBarForNavigation" fontSize="8"/>
				
				<fx:Divider/>
				
				<s:Label text="scrollBarDirection:" fontWeight="bold" enabled="{useScrollBarForNavigation.selected}" fontSize="8"/>
				<s:ButtonBar id="scrollBarDirection" enabled="{useScrollBarForNavigation.selected}" fontSize="8" requireSelection="true">
					<s:dataProvider>
						<s:ArrayList>
							<fx:String>vertical</fx:String>
							<fx:String>horizontal</fx:String>
						</s:ArrayList>
					</s:dataProvider>
				</s:ButtonBar>
				
			</s:HGroup>
			
			<s:Label text="Presets" fontWeight="bold" fontSize="13" height="30" verticalAlign="bottom"/>
			<s:ButtonBar id="presets" change="onPresetsChange( event )" fontSize="8">
				<s:dataProvider>
					<s:ArrayList>
						<fx:Object label="Full Carousel" angle="360" numUnselectedElements="0" rotateX="0" rotateY="1" depthColor="16777215" depthColorAlpha="0" radiusX="200" radiusY="0" radiusZ="200" horizontalAlign="1" verticalAlign="1" horizontalAlignOffset="0" verticalAlignOffset="0" elementHorizontalAlign="1" elementVerticalAlign="1" projectionCenterX="200" projectionCenterY="150" fieldOfView="55" easer="0" duration="700" useScrollBarForNavigation="false" scrollBarDirection="0"/>
						<fx:Object label="Honeycomb" angle="100" numUnselectedElements="3" rotateX="0" rotateY="1" depthColor="16777215" depthColorAlpha="100" radiusX="300" radiusY="0" radiusZ="-300" horizontalAlign="1" verticalAlign="1" horizontalAlignOffset="0" verticalAlignOffset="0" elementHorizontalAlign="1" elementVerticalAlign="1" projectionCenterX="200" projectionCenterY="150" fieldOfView="55" easer="0" duration="700" useScrollBarForNavigation="false" scrollBarDirection="0"/>
						<fx:Object label="Cube" angle="180" numUnselectedElements="1" rotateX="0" rotateY="1" depthColor="16777215" depthColorAlpha="50" radiusX="39" radiusY="0" radiusZ="40" horizontalAlign="1" verticalAlign="1" horizontalAlignOffset="0" verticalAlignOffset="0" elementHorizontalAlign="1" elementVerticalAlign="1" projectionCenterX="200" projectionCenterY="150" fieldOfView="55" easer="0" duration="700" useScrollBarForNavigation="false" scrollBarDirection="0"/>
						<fx:Object label="Swap" angle="199" numUnselectedElements="1" rotateX="0" rotateY="2" depthColor="16777215" depthColorAlpha="0" radiusX="60" radiusY="0" radiusZ="40" horizontalAlign="1" verticalAlign="1" horizontalAlignOffset="0" verticalAlignOffset="0" elementHorizontalAlign="1" elementVerticalAlign="1" projectionCenterX="200" projectionCenterY="150" fieldOfView="55" easer="0" duration="700" useScrollBarForNavigation="false" scrollBarDirection="0"/>
						<fx:Object label="Vertical" angle="150" numUnselectedElements="3" rotateX="0" rotateY="2" depthColor="16777215" depthColorAlpha="0" radiusX="0" radiusY="200" radiusZ="1" horizontalAlign="1" verticalAlign="1" horizontalAlignOffset="0" verticalAlignOffset="0" elementHorizontalAlign="1" elementVerticalAlign="1" projectionCenterX="200" projectionCenterY="150" fieldOfView="55" easer="0" duration="700" useScrollBarForNavigation="false" scrollBarDirection="0"/>
						<fx:Object label="Twisted" angle="270" numUnselectedElements="4" rotateX="2" rotateY="1" depthColor="16777215" depthColorAlpha="100" radiusX="150" radiusY="150" radiusZ="200" horizontalAlign="1" verticalAlign="1" horizontalAlignOffset="0" verticalAlignOffset="0" elementHorizontalAlign="1" elementVerticalAlign="1" projectionCenterX="200" projectionCenterY="150" fieldOfView="55" easer="0" duration="700" useScrollBarForNavigation="false" scrollBarDirection="0"/>
					</s:ArrayList>
				</s:dataProvider>
			</s:ButtonBar>
			
		</s:VGroup>
	</s:Scroller>
	
</s:Application>
